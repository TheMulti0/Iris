version: '3.4'

services:
  mongodb: 
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
        
  rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    container_name: rabbitmq
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json

  scraper:
    image: themulti0/scraper.rabbitmq
    restart: always
    container_name: scraper
    volumes:
      - ../Scraper.RabbitMq/Scraper.RabbitMq/appsettings.json:/app/appsettings.json

  telegramreceiver:
    image: irisupdate/telegramreceiver:latest
    build:
      context: .
      dockerfile: TelegramReceiver/Dockerfile
    container_name: telegramreceiver
    restart: always
    volumes:
      - ./TelegramReceiver/appsettings.json:/app/appsettings.json
    depends_on:
      - rabbitmq
      - mongodb
      - scraper

  messagesmanager:
    image: irisupdate/messagesmanager:latest
    build:
      context: .
      dockerfile: MessagesManager/Dockerfile
    container_name: messagesmanager
    restart: always
    volumes:
      - ./MessagesManager/appsettings.json:/app/appsettings.json
    depends_on:
      - rabbitmq
      - mongodb
      - scraper

  telegramsender:
    image: irisupdate/telegramsender:latest
    build:
      context: .
      dockerfile: TelegramSender/Dockerfile
    container_name: telegramsender
    restart: always
    volumes:
      - ./TelegramSender/appsettings.json:/app/appsettings.json
    depends_on:
      - rabbitmq
      - mongodb