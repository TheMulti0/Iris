version: '3.4'

services:
  mongodb: 
    image: mongo:latest
    restart: always
    container_name: mongodb
    ports:
      - 27017:27017
        
  rabbitmq:
    image: rabbitmq:3.6-management-alpine
    restart: always
    container_name: rabbitmq
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
    ports:
      - 5672:5672
      - 15672:15672

  scraper:
    image: themulti0/scraper
    restart: always
    build:
      context: ../Scraper.MassTransit/src
      dockerfile: Scraper.MassTransit/Dockerfile
    container_name: scraper
    volumes:
      - ../Scraper.MassTransit/src/Scraper.MassTransit/appsettings.json:/app/appsettings.json

  postslistener:
    image: themulti0/postslistener
    restart: always
    build:
      context: ../Scraper.MassTransit/src
      dockerfile: PostsListener/Dockerfile
    container_name: postslistener
    volumes:
      - ../Scraper.MassTransit/src/PostsListener/appsettings.json:/app/appsettings.json

  telegramreceiver:
    image: irisupdate/telegramreceiver:latest
    build:
      context: .
      dockerfile: TelegramReceiver/Dockerfile
    container_name: telegramreceiver
    restart: always
    volumes:
      - ./TelegramReceiver/appsettings.json:/app/appsettings.json
    depends_on:
      - rabbitmq
      - mongodb
      - scraper

  telegramsender:
    image: irisupdate/telegramsender:latest
    build:
      context: .
      dockerfile: TelegramSender/Dockerfile
    container_name: telegramsender
    restart: always
    volumes:
      - ./TelegramSender/appsettings.json:/app/appsettings.json
    depends_on:
      - rabbitmq
      - mongodb

  dashboard:
    image: irisupdate/dashboard:latest
    build:
      context: .
      dockerfile: Dashboard/Dockerfile
    container_name: dashboard
    restart: always
    volumes:
      - ./Dashboard/appsettings.json:/app/appsettings.json
    depends_on:
      - rabbitmq
      - mongodb

  dashboardapp:
    image: irisupdate/dashboardapp:latest
    build:
      context: dashboard-app
      dockerfile: Dockerfile
    ports:
      - "80:80"
    container_name: dashboardapp
    restart: always
    depends_on:
      - dashboard