name: Update components images

on:
  push:
    branches: [ master ]
    
jobs:
  facebookscraper:
    name: Update FacebookScraper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment facebookscraper facebookscraper=irisupdate/facebookscraper
  feedsscraper:
    name: Update FeedsScraper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment feedsscraper feedsscraper=irisupdate/feedsscraper
          
  messagesmanager:
    name: Update MessagesManager
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment messagesmanager messagesmanager=irisupdate/messagesmanager
          
  subscriptionsmanager:
    name: Update SubscriptionsManager
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment subscriptionsmanager subscriptionsmanager=irisupdate/subscriptionsmanager
          
  scrapersdistributor:
    name: Update ScrapersDistributor
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment scrapersdistributor scrapersdistributor=irisupdate/scrapersdistributor

  telegramreceiver:
    name: Update TelegramReceiver
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment telegramreceiver telegramreceiver=irisupdate/telegramreceiver
          
  telegramsender:
    name: Update TelegramSender
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment telegramsender telegramsender=irisupdate/telegramsender
          
  twitterscraper:
    name: Update TwitterScraper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment twitterscraper twitterscraper=irisupdate/twitterscraper

  dashboardapi:
    name: Update DashboardApi
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment dashboardapi dashboardapi=irisupdate/dashboardapi

  dashboardapp:
    name: Update dashboardapp
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iris
      - name: Update image
        run: kubectl set image deployment dashboardapp dashboardapp=irisupdate/dashboardapp
        
