version: '3.4'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    networks:
      - kafka_network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_HEAP_OPTS: -Xmx256M -Xms128M
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "updates:1:1, configs:1:1"
    networks:
      - kafka_network
    depends_on:
      - zookeeper

  mongodb: 
    image: mongo:latest
    container_name: mongodb
    restart: always
    networks:
      - mongodb_network
    volumes:
      - ./mongodb:/data/db

  telegrambot:
    image: themulti0/iris_telegrambot:latest
    build:
      context: .
      dockerfile: TelegramBot/Dockerfile
    container_name: telegrambot
    volumes:
      - './TelegramBot/appsettings.json:/app/appsettings.json'
    restart: always
    networks:
      - kafka_network
    depends_on:
      - kafka

  twitterproducer:
    image: themulti0/iris_twitterproducer:latest
    build:
      context: .
      dockerfile: updatesproducer/Dockerfile
      args:
        PROJECT_DIR: 'twitterproducer'
    restart: always
    container_name: twitterproducer
    volumes:
      - './twitterproducer/appsettings.json:/app/appsettings.json'
    networks:
      - kafka_network
      - mongodb_network
    depends_on:
      - kafka
      - mongodb

  facebookproducer:
    image: themulti0/iris_facebookproducer:latest
    build:
      context: .
      dockerfile: updatesproducer/Dockerfile
      args:
        PROJECT_DIR: 'facebookproducer'
    restart: always
    container_name: facebookproducer
    volumes:
      - './facebookproducer/appsettings.json:/app/appsettings.json'
    networks:
      - kafka_network
      - mongodb_network
    depends_on:
      - kafka
      - mongodb

  youtubeproducer:
    image: themulti0/iris_youtubeproducer:latest
    build:
      context: .
      dockerfile: updatesproducer/Dockerfile
      args:
        PROJECT_DIR: 'youtubeproducer'
    restart: always
    container_name: youtubeproducer
    volumes:
      - './youtubeproducer/appsettings.json:/app/appsettings.json'
    networks:
      - kafka_network
      - mongodb_network
    depends_on:
      - kafka
      - mongodb

networks:
  kafka_network:
  mongodb_network:
