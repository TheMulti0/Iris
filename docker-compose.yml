version: '3.4'

services:
  rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    container_name: 'rabbitmq'
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    networks:
      - rabbitmq_network

  mongodb: 
    image: mongo:latest
    container_name: mongodb
    restart: always
    command: [--auth]
    volumes:
      - ./mongodb:/data/db
      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
    ports:
      - 27017:27017
    networks:
      - mongodb_network

  telegramreceiver:
    image: irisupdate/telegramreceiver:latest
    build:
      context: .
      dockerfile: TelegramReceiver/Dockerfile
    container_name: telegramreceiver
    restart: always
    env_file:
      - telegramreceiver.env
    networks:
      - rabbitmq_network
      - mongodb_network
    depends_on:
      - rabbitmq
      - mongodb

  messagesmanager:
    image: irisupdate/messagesmanager:latest
    build:
      context: .
      dockerfile: MessagesManager/Dockerfile
    container_name: messagesmanager
    restart: always
    env_file:
      - messagesmanager.env
    security_opt:
      - seccomp:unconfined
    networks:
      - rabbitmq_network
      - mongodb_network
      - chrome_network
    depends_on:
      - rabbitmq
      - mongodb
      - chrome

  telegramsender:
    image: irisupdate/telegramsender:latest
    build:
      context: .
      dockerfile: TelegramSender/Dockerfile
    container_name: telegramsender
    restart: always
    env_file:
      - telegramsender.env
    networks:
      - rabbitmq_network
      - mongodb_network
    depends_on:
      - rabbitmq
      - mongodb

networks:
  rabbitmq_network:
  mongodb_network:
